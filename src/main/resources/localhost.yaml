#
# Run with program argument --spring.config.name=localhost for this configuration to take effect.
#
# Will keep looking for a localhost Kafka broker, see spring.kafka.bootstrap-servers.
# Also, you might want to change app.arena.kafka.consumer.topic to match your local setup.
#

spring:
  application:
    name: "tpts-arena"
  kafka:
    bootstrap-servers: "localhost:9092" # Your local Docker.
    consumer:
      auto-commit-interval: 100
      auto-offset-reset: latest
      enable-auto-commit: true
      group-id: ${spring.application.name}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

management:
  metrics:
    export:
      prometheus:
        enabled: true
  endpoints:
    web:
      exposure:
        include: info, health, metrics, prometheus

app:
  arena:
    kafka:
      consumer:
        topic: "aura.kafkarator-canary-dev-gcp"